name: Turn content-edit issues into PRs

on:
  issues:
    types: [opened, edited]

permissions:
  contents: write
  pull-requests: write

jobs:
  build-pr:
    if: contains(github.event.issue.labels.*.name, 'content-edit')
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Parse issue form
        id: parse
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.issue.body || '';
            function extract(section) {
              const re = new RegExp(`###\\s+${section}\\n([\\s\\S]*?)(?=\\n###|$)`, 'i');
              const m = body.match(re);
              return m ? m[1].trim() : '';
            }
            // 注意这里两个要转义的标题
            const file = extract('Which file do you want to edit\\?').split('\n')[0].trim();
            const content = extract('New body \\(Markdown\\)');
            if (!file) core.setFailed('No file parsed from issue body.');
            core.setOutput('file', file);
            core.setOutput('content', content);

      - name: Update file body preserving front matter
        id: update
        run: |
          FILE="${{ steps.parse.outputs.file }}"
          CONTENT_FILE=.tmp_body.md
          printf "%s" "${{ steps.parse.outputs.content }}" > "$CONTENT_FILE"

          if [ ! -f "$FILE" ]; then
            echo "Target file not found: $FILE" >&2
            exit 1
          fi

          cp "$FILE" .tmp_src.md

          python3 - <<'PY'
          import sys

          # 读现有文件和issue里新的正文
          src = open('.tmp_src.md', 'r', encoding='utf-8').read()
          body = open('.tmp_body.md', 'r', encoding='utf-8').read()

          # 保留 front matter
          if src.lstrip().startswith('---'):
              parts = src.split('\n---\n', 2)
              if len(parts) >= 3:
                  front = parts[1]
                  new = f"---\n{front}\n---\n" + body.strip() + "\n"
              else:
                  # front matter 格式不完整，就直接用新内容
                  new = body.strip() + "\n"
          else:
              new = body.strip() + "\n"

          open('.out.md', 'w', encoding='utf-8').write(new)
          PY

          mv .out.md "$FILE"
          rm -f .tmp_body.md .tmp_src.md

      - name: Create PR
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "Content edit: update ${{ steps.parse.outputs.file }} via issue #${{ github.event.issue.number }}"
          title: "Content edit for ${{ steps.parse.outputs.file }}"
          body: |
            This PR was auto-generated from issue #${{ github.event.issue.number }}.
          branch: "content/edit-issue-${{ github.event.issue.number }}"
          delete-branch: true