name: Prefill Applications issue with publications YAML

on:
  issues:
    types: [opened]

permissions:
  issues: write
  contents: read

jobs:
  prefill:
    if: contains(github.event.issue.labels.*.name, 'applications')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Read current contents
        id: read
        run: |
          echo "pubs<<EOF" >> $GITHUB_OUTPUT
          cat _data/publications.yml >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "intro<<EOF" >> $GITHUB_OUTPUT
          python3 - << 'PY'
  import re
  src=open('application.markdown','r',encoding='utf-8').read()
  def extract(section_id):
    m=re.search(r'<!--\s*CMS:section\s+id='+re.escape(section_id)+r'\s*-->([\s\S]*?)<!--\s*/CMS:section\s*-->',src,re.M)
    print((m.group(1) if m else '').strip())
  extract('applications_intro')
PY
          echo "EOF" >> $GITHUB_OUTPUT
          echo "readintro<<EOF" >> $GITHUB_OUTPUT
          python3 - << 'PY'
  import re
  src=open('application.markdown','r',encoding='utf-8').read()
  def extract(section_id):
    m=re.search(r'<!--\s*CMS:section\s+id='+re.escape(section_id)+r'\s*-->([\s\S]*?)<!--\s*/CMS:section\s*-->',src,re.M)
    print((m.group(1) if m else '').strip())
  extract('applications_reading_intro')
PY
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Comment with current YAML
        uses: actions/github-script@v7
        with:
          script: |
            const pubs = `${{ steps.read.outputs.pubs }}`;
            const intro = `${{ steps.read.outputs.intro }}`;
            const reading = `${{ steps.read.outputs.readintro }}`;
            const body = [
              ':information_source: Current page content for quick copy/paste â†’',
              '',
              '**Intro paragraph (applications_intro)**',
              '```html',
              intro,
              '```',
              '',
              '**Reading intro paragraph (applications_reading_intro)**',
              '```html',
              reading,
              '```',
              '',
              '**Publications YAML** (paste into the "Publications data (YAML)" field if you want to modify):',
              '',
              '```yaml',
              pubs,
              '```'
            ].join('\n');
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body
            });


